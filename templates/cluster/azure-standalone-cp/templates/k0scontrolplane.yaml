apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: K0sControlPlane
metadata:
  name: {{ include "k0scontrolplane.name" . }}
spec:
  replicas: {{ .Values.controlPlaneNumber }}
  version: {{ .Values.k0s.version }}
  k0sConfigSpec:
    args:
      - --enable-worker
      - --enable-cloud-provider
      - --kubelet-extra-args="--cloud-provider=external"
      - --disable-components=konnectivity-server
    k0s:
      apiVersion: k0s.k0sproject.io/v1beta1
      kind: ClusterConfig
      metadata:
        name: k0s
      spec:
        api:
          extraArgs:
            anonymous-auth: "true"
            {{- with .Values.k0s.api.extraArgs }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
        network:
          provider: calico
          calico:
            mode: vxlan
        extensions:
          helm:
            repositories:
              - name: mirantis
                {{- if .Values.extensions.chartRepository }}
                url: {{ .Values.extensions.chartRepository }}
                {{- else }}
                url: https://charts.mirantis.com
                {{- end }}
              - name: azuredisk-csi-driver
                {{- if .Values.extensions.chartRepository }}
                url: {{ .Values.extensions.chartRepository }}
                {{- else }}
                url: https://raw.githubusercontent.com/kubernetes-sigs/azuredisk-csi-driver/master/charts
                {{- end }}
            charts:
              - name: cloud-provider-azure
                namespace: kube-system
                chartname: mirantis/cloud-provider-azure
                version: 1.31.2
                order: 1
                values: |
                  cloudControllerManager:
                    cloudConfigSecretName: azure-cloud-provider
                    nodeSelector:
                      node-role.kubernetes.io/control-plane: "true"
                    {{- if .Values.extensions.imageRepository }}
                    imageRepository: {{ .Values.extensions.imageRepository }}
                    {{- end }}
                  {{- if .Values.extensions.imageRepository }}
                  cloudNodeManager:
                    imageRepository: {{ .Values.extensions.imageRepository }}
                  {{- end }}
              - name: azuredisk-csi-driver
                namespace: kube-system
                chartname: azuredisk-csi-driver/azuredisk-csi-driver
                version: 1.30.3
                order: 2
                values: |
                  {{- if .Values.extensions.imageRepository }}
                  image:
                    baseRepo: {{ .Values.extensions.imageRepository }}
                  {{- end }}
                  controller:
                    cloudConfigSecretName: azure-cloud-provider
                  node:
                    cloudConfigSecretName: azure-cloud-provider
                  linux:
                    kubelet: "/var/lib/k0s/kubelet"
    k0sWorkerConfigSpec:
      files:
        - path: /etc/k0s/containerd.toml
          owner: "root:root"
          permissions: 420  # octal 0644
          content: |
            version = 2

            [plugins]

              [plugins."io.containerd.grpc.v1.cri"]
                cdi_spec_dirs = ["/etc/cdi", "/var/run/cdi"]
                device_ownership_from_security_context = false
                disable_apparmor = false
                disable_cgroup = false
                disable_hugetlb_controller = true
                disable_proc_mount = false
                disable_tcp_service = true
                drain_exec_sync_io_timeout = "0s"
                enable_cdi = true
                enable_selinux = false
                enable_tls_streaming = false
                enable_unprivileged_icmp = false
                enable_unprivileged_ports = false
                ignore_deprecation_warnings = []
                ignore_image_defined_volumes = false
                image_pull_progress_timeout = "5m0s"
                image_pull_with_sync_fs = false
                max_concurrent_downloads = 3
                max_container_log_line_size = 16384
                netns_mounts_under_state_dir = false
                restrict_oom_score_adj = false
                sandbox_image = "registry.k8s.io/pause:3.9"
                selinux_category_range = 1024
                stats_collect_period = 10
                stream_idle_timeout = "4h0m0s"
                stream_server_address = "127.0.0.1"
                stream_server_port = "0"
                systemd_cgroup = false
                tolerate_missing_hugetlb_controller = true
                unset_seccomp_profile = ""

                [plugins."io.containerd.grpc.v1.cri".cni]
                  bin_dir = "/opt/cni/bin"
                  conf_dir = "/etc/cni/net.d"
                  conf_template = ""
                  ip_pref = ""
                  max_conf_num = 1
                  setup_serially = false

                [plugins."io.containerd.grpc.v1.cri".containerd]
                  default_runtime_name = "runc"
                  disable_snapshot_annotations = true
                  discard_unpacked_layers = false
                  ignore_blockio_not_enabled_errors = false
                  ignore_rdt_not_enabled_errors = false
                  no_pivot = false
                  snapshotter = "overlayfs"

                  [plugins."io.containerd.grpc.v1.cri".containerd.default_runtime]
                    base_runtime_spec = ""
                    cni_conf_dir = ""
                    cni_max_conf_num = 0
                    container_annotations = []
                    pod_annotations = []
                    privileged_without_host_devices = false
                    privileged_without_host_devices_all_devices_allowed = false
                    runtime_engine = ""
                    runtime_path = ""
                    runtime_root = ""
                    runtime_type = ""
                    sandbox_mode = ""
                    snapshotter = ""

                    [plugins."io.containerd.grpc.v1.cri".containerd.default_runtime.options]

                  [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]

                    [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.nvidia]
                      runtime_type = "io.containerd.runc.v2"
                      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.nvidia.options]
                        BinaryName = "/usr/bin/nvidia-container-runtime"
                
                    [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                      base_runtime_spec = ""
                      cni_conf_dir = ""
                      cni_max_conf_num = 0
                      container_annotations = []
                      pod_annotations = []
                      privileged_without_host_devices = false
                      privileged_without_host_devices_all_devices_allowed = false
                      runtime_engine = ""
                      runtime_path = ""
                      runtime_root = ""
                      runtime_type = "io.containerd.runc.v2"
                      sandbox_mode = "podsandbox"
                      snapshotter = ""

                      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
                        BinaryName = ""
                        CriuImagePath = ""
                        CriuPath = ""
                        CriuWorkPath = ""
                        IoGid = 0
                        IoUid = 0
                        NoNewKeyring = false
                        NoPivotRoot = false
                        Root = ""
                        ShimCgroup = ""
                        SystemdCgroup = false

                  [plugins."io.containerd.grpc.v1.cri".containerd.untrusted_workload_runtime]
                    base_runtime_spec = ""
                    cni_conf_dir = ""
                    cni_max_conf_num = 0
                    container_annotations = []
                    pod_annotations = []
                    privileged_without_host_devices = false
                    privileged_without_host_devices_all_devices_allowed = false
                    runtime_engine = ""
                    runtime_path = ""
                    runtime_root = ""
                    runtime_type = ""
                    sandbox_mode = ""
                    snapshotter = ""

                    [plugins."io.containerd.grpc.v1.cri".containerd.untrusted_workload_runtime.options]

                [plugins."io.containerd.grpc.v1.cri".image_decryption]
                  key_model = "node"

                [plugins."io.containerd.grpc.v1.cri".registry]
                  config_path = ""

                  [plugins."io.containerd.grpc.v1.cri".registry.auths]

                  [plugins."io.containerd.grpc.v1.cri".registry.configs]

                  [plugins."io.containerd.grpc.v1.cri".registry.headers]

                  [plugins."io.containerd.grpc.v1.cri".registry.mirrors]

                [plugins."io.containerd.grpc.v1.cri".x509_key_pair_streaming]
                  tls_cert_file = ""
                  tls_key_file = ""

  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: AzureMachineTemplate
      name: {{ include "azuremachinetemplate.controlplane.name" . }}
      namespace: {{ .Release.Namespace }}
